{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","moviesUrl","getMovies","title","url","fetch","then","response","json","FindMovie","React","memo","addMovie","useState","Movie","setMovie","typedTitle","setTypedTitle","setTitle","isMovie","setIsMovie","useEffect","result","Error","disabled","useMemo","Boolean","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","setMovies","currentMovies","some","ReactDOM","render","document","getElementById"],"mappings":"uUAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,gBCXfC,EAAS,0CAFD,WAEC,OAOR,SAASC,EAAUC,GACxB,OANeC,EAMA,GAAD,OAAIH,GAAJ,OAAgBE,GALvBE,MAAMD,GACVE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAF/B,IAAiBJ,E,UCKJK,EAA6BC,IAAMC,MAC9C,YAAmB,IAAhBC,EAAe,EAAfA,SACD,EAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOV,EAAP,KAAce,EAAd,KAEA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRnB,EAAUC,GACPG,MAAK,SAAAgB,GAKJ,GAJqB,qBAAjBA,EAAOC,OACTH,GAAW,GAGTE,EAAO3B,MAAO,CAChB,IACEF,EAIE6B,EAJF7B,OACAE,EAGE2B,EAHF3B,MACAC,EAEE0B,EAFF1B,KACAI,EACEsB,EADFtB,OAGFe,EAAS,CACPtB,SACAE,QACAC,OACAI,WAGFkB,EAAS,IACTD,EAAc,UAGnB,CAACd,IAEJ,IAAMqB,EAAWC,mBAAQ,WACvB,OAAOC,QAAQZ,KACd,CAACA,IAEJ,OACE,qCACE,uBAAMvB,UAAU,aAAhB,UACE,qBAAKA,UAAU,QAAf,SACE,wBAAOA,UAAU,QAAQoC,QAAQ,cAAjC,UACE,qBAAKpC,UAAU,UAAf,SACE,uBACEqC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvC,UAAWwC,IAAW,QAAS,CAAE,aAAcZ,IAC/Ca,MAAOhB,EACPiB,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXd,GAAW,GACXH,EAAciB,EAAOF,aAKzBb,GACA,mBAAG5B,UAAU,iBAAb,uDAON,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEqC,KAAK,SACLrC,UAAU,kBACV4C,QAAS,WACPjB,EAASF,IAJb,4BAWF,qBAAKzB,UAAU,UAAf,SACE,wBACEiC,UAAWA,EACXI,KAAK,SACLrC,UAAU,oBACV4C,QAAS,WACHrB,IACFF,EAASE,GACTC,EAAS,QAPf,qCAiBLD,GACC,sBAAKvB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CACED,MAAOwB,aC7GRsB,EAAgB,WAC3B,MAA4BvB,mBAAkB,IAA9C,mBAAOf,EAAP,KAAeuC,EAAf,KAEMzB,EAAWa,mBAAQ,WACvB,OAAO,SAACX,GACNuB,GAAU,SAAAC,GACR,OAAIA,EAAcC,MAAK,SAACjD,GAAD,OAAkBA,EAAMU,SAAWc,EAAMd,UACvDsC,EAGH,GAAN,mBAAWA,GAAX,CAA0BxB,UAG7B,IAEH,OACE,sBAAKvB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEqB,SAAUA,UCvBpB4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3f1e3a31.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","// eslint-disable-next-line\n\nconst myKey = '68b6f563';\n\nconst moviesUrl = `https://www.omdbapi.com/?apikey=${myKey}&t=`;\n\nfunction request(url: string) {\n  return fetch(url)\n    .then(response => response.json());\n}\n\nexport function getMovies(title: string) {\n  return request(`${moviesUrl}${title}`);\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovies } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (Movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = React.memo(\n  ({ addMovie }) => {\n    const [Movie, setMovie] = useState<Movie | null>();\n\n    const [typedTitle, setTypedTitle] = useState('');\n    const [title, setTitle] = useState('');\n\n    const [isMovie, setIsMovie] = useState(true);\n\n    useEffect(() => {\n      getMovies(title)\n        .then(result => {\n          if (result.Error === 'Movie not found!') {\n            setIsMovie(false);\n          }\n\n          if (result.Title) {\n            const {\n              Poster,\n              Title,\n              Plot,\n              imdbID,\n            } = result;\n\n            setMovie({\n              Poster,\n              Title,\n              Plot,\n              imdbID,\n            });\n\n            setTitle('');\n            setTypedTitle('');\n          }\n        });\n    }, [title]);\n\n    const disabled = useMemo(() => {\n      return Boolean(Movie);\n    }, [Movie]);\n\n    return (\n      <>\n        <form className=\"find-movie\">\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              <div className=\"control\">\n                <input\n                  type=\"text\"\n                  id=\"movie-title\"\n                  placeholder=\"Enter a title to search\"\n                  className={classNames('input', { 'is-danger': !isMovie })}\n                  value={typedTitle}\n                  onChange={({ target }) => {\n                    setIsMovie(true);\n                    setTypedTitle(target.value);\n                  }}\n                />\n              </div>\n\n              {!isMovie && (\n                <p className=\"help is-danger\">\n                  Can&apos;t find a movie with such a title\n                </p>\n              )}\n            </label>\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-light\"\n                onClick={() => {\n                  setTitle(typedTitle);\n                }}\n              >\n                Find a movie\n              </button>\n            </div>\n\n            <div className=\"control\">\n              <button\n                disabled={!disabled}\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  if (Movie) {\n                    addMovie(Movie);\n                    setMovie(null);\n                  }\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          </div>\n        </form>\n\n        {Movie && (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard\n              movie={Movie}\n            />\n          </div>\n        )}\n      </>\n    );\n  },\n);\n","import React, { useState, useMemo } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useMemo(() => {\n    return (Movie: Movie) => {\n      setMovies(currentMovies => {\n        if (currentMovies.some((movie: Movie) => movie.imdbID === Movie.imdbID)) {\n          return currentMovies;\n        }\n\n        return [...currentMovies, Movie];\n      });\n    };\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}